gui:
  # use the mocha catppuccin theme
  theme:
    lightTheme: false
    activeBorderColor:
      - "#a6e3a1" # Green
      - bold
    inactiveBorderColor:
      - "#cdd6f4" # Text
    optionsTextColor:
      - "#89b4fa" # Blue
    selectedLineBgColor:
      - "#313244" # Surface0
    selectedRangeBgColor:
      - "#313244" # Surface0
    cherryPickedCommitBgColor:
      - "#94e2d5" # Teal
    cherryPickedCommitFgColor:
      - "#89b4fa" # Blue
    unstagedChangesColor:
      - red # Red
git:
  log:
    order: date-order
    showWholeGraph: true

  paging:
    colorArg: always
    pager: delta --dark --paging=never --line-numbers --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"

  skipHookPrefix: wip

customCommands:
  - key: "C"
    context: "files"
    description: "commit files with format"
    prompts:
      - type: "menu"
        title: "What kind of commit type is it?"
        key: "Type"
        options:
          - name: "fix"
            description: "Bug or issue fix"
            value: "fix"
          - name: "feat"
            description: "Addition of a new feature"
            value: "feat"
          - name: "docs"
            description: "Update or improvement of documentation"
            value: "docs"
          - name: "style"
            description: "Code formatting changes or UI-only updates"
            value: "style"
          - name: "refactor"
            description: "Code improvement without performance gains"
            value: "refactor"
          - name: "test"
            description: "Addition or improvement of tests"
            value: "test"
          - name: "perf"
            description: "Performance improvement"
            value: "perf"
          - name: "chore"
            description: "Changes or improvements in the build process"
            value: "chore"
          - name: "wip"
            description: "Work in progress"
            value: "wip"
      - type: "input"
        title: "(Optional) Enter the scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "Enter the Message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        title: "Commit"
        body: "Commit with the message '{{.Form.Type}}{{.Form.Scope}}{{.Form.Breaking}}: {{.Form.Message}}'. Is this okay?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Committing..."
