#!/usr/bin/env bash

# bash strict mode
set -T          # inherit DEBUG and RETURN trap for functions
set -C          # prevent file overwrite by > &> <>
set -E          # inherit -e
set -e          # exit immediately on errors
set -u          # exit on not assigned variables
set -o pipefail # exit on pipe failure

command -v tput &> /dev/null && [ -t 1 ] && [ -z "${NO_COLOR:-}" ] || tput() { true; }

################################################################################
# colors
################################################################################
BG_BLACK=$(tput setab 0)
BG_RED=$(tput setab 1)
BG_GREEN=$(tput setab 2)
BG_YELLOW=$(tput setab 3)
BG_BLUE=$(tput setab 4)
BG_MAGENTA=$(tput setab 5)
BG_CYAN=$(tput setab 6)
BG_WHITE=$(tput setab 7)
BG_DEFAULT=$(tput setab 9)

BG_BRIGHT_BLACK=$(tput setab 8)    # Not widely supported
BG_BRIGHT_RED=$(tput setab 9)      # Not widely supported
BG_BRIGHT_GREEN=$(tput setab 10)   # Not widely supported
BG_BRIGHT_YELLOW=$(tput setab 11)  # Not widely supported
BG_BRIGHT_BLUE=$(tput setab 12)    # Not widely supported
BG_BRIGHT_MAGENTA=$(tput setab 13) # Not widely supported
BG_BRIGHT_CYAN=$(tput setab 14)    # Not widely supported
BG_BRIGHT_WHITE=$(tput setab 15)   # Not widely supported
BG_BRIGHT_DEFAULT=$(tput setab 9)

FG_BLACK=$(tput setaf 0)
FG_RED=$(tput setaf 1)
FG_GREEN=$(tput setaf 2)
FG_YELLOW=$(tput setaf 3)
FG_BLUE=$(tput setaf 4)
FG_MAGENTA=$(tput setaf 5)
FG_CYAN=$(tput setaf 6)
FG_WHITE=$(tput setaf 7)
FG_DEFAULT=$(tput setaf 9)

FG_BRIGHT_BLACK=$(tput setaf 8)    # Not widely supported
FG_BRIGHT_RED=$(tput setaf 9)      # Not widely supported
FG_BRIGHT_GREEN=$(tput setaf 10)   # Not widely supported
FG_BRIGHT_YELLOW=$(tput setaf 11)  # Not widely supported
FG_BRIGHT_BLUE=$(tput setaf 12)    # Not widely supported
FG_BRIGHT_MAGENTA=$(tput setaf 13) # Not widely supported
FG_BRIGHT_CYAN=$(tput setaf 14)    # Not widely supported
FG_BRIGHT_WHITE=$(tput setaf 15)   # Not widely supported
FG_BRIGHT_DEFAULT=$(tput setaf 9)

BOLD=$(tput bold)
RESET=$(tput sgr0)
BLINK=$(tput blink)

declare -r SCRIPT_VERSION='1.0.0'
declare -r SCRIPT_NAME="./$(basename $0)"
declare -r SCRIPT_PARENT_DIR="$(dirname $0)"
declare -r SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
declare -r PROJECT_DIR=$(realpath $SCRIPT_DIR/..)

# Functions for printing messages
function tip() {
    echo -e "${FG_BRIGHT_BLACK}${BG_CYAN}${BOLD} TIP ${RESET}: ${FG_CYAN}$1${RESET}"
}

function error() {
    echo -e "
${FG_BRIGHT_BLACK}${BG_RED}${BOLD} ERROR ${RESET}: ${FG_RED}$1${RESET}"

    if [[ -n ${2:-} ]]; then
        tip "$2"
    fi

    echo -e "
If you have any questions, contact the developers for support."

    safe_exit 1
}

function warn() {
    echo -e "
${FG_BRIGHT_BLACK}${BG_YELLOW}${BOLD}${BLINK} WARN ${RESET}: ${FG_YELLOW}$1${RESET}"
}

function log() {
    echo -e "
${FG_BRIGHT_BLACK}${BG_CYAN}${BOLD} LOG ${RESET}: ${FG_CYAN}$1${RESET}"
}

function info() {
    echo -e "
${FG_WHITE}${BG_BLUE}${BOLD} INFO ${RESET}: ${FG_BLUE}$1${RESET}"
}

function success() {
    echo -e "
${FG_WHITE}${BG_GREEN}${BOLD} INFO ${RESET}: ${FG_GREEN}$1${RESET}"
}

function execute() {
    echo -e "
${FG_WHITE}${BG_MAGENTA}${BOLD} EXECUTE ${RESET}: ${FG_MAGENTA}$1${RESET}"
}

function run_command() {
    execute "+ $*"
    "$@"
}
